{"id":"node_modules/ndarray-fft/lib/fft-matrix.js","dependencies":[{"name":"/Users/huyifan/HE_js/mnist/package.json","includedInParent":true,"mtime":1547006932931},{"name":"/Users/huyifan/HE_js/mnist/.babelrc","includedInParent":true,"mtime":1546601936000},{"name":"/Users/huyifan/HE_js/mnist/node_modules/ndarray-fft/package.json","includedInParent":true,"mtime":1546999610671},{"name":"bit-twiddle","loc":{"line":1,"column":19},"parent":"/Users/huyifan/HE_js/mnist/node_modules/ndarray-fft/lib/fft-matrix.js","resolved":"/Users/huyifan/HE_js/mnist/node_modules/bit-twiddle/twiddle.js"}],"generated":{"js":"var bits = require('bit-twiddle')\r\n\r\nfunction fft(dir, nrows, ncols, buffer, x_ptr, y_ptr, scratch_ptr) {\r\n  dir |= 0\r\n  nrows |= 0\r\n  ncols |= 0\r\n  x_ptr |= 0\r\n  y_ptr |= 0\r\n  if(bits.isPow2(ncols)) {\r\n    fftRadix2(dir, nrows, ncols, buffer, x_ptr, y_ptr)\r\n  } else {\r\n    fftBluestein(dir, nrows, ncols, buffer, x_ptr, y_ptr, scratch_ptr)\r\n  }\r\n}\r\nmodule.exports = fft\r\n\r\nfunction scratchMemory(n) {\r\n  if(bits.isPow2(n)) {\r\n    return 0\r\n  }\r\n  return 2 * n + 4 * bits.nextPow2(2*n + 1)\r\n}\r\nmodule.exports.scratchMemory = scratchMemory\r\n\r\n\r\n//Radix 2 FFT Adapted from Paul Bourke's C Implementation\r\nfunction fftRadix2(dir, nrows, ncols, buffer, x_ptr, y_ptr) {\r\n  dir |= 0\r\n  nrows |= 0\r\n  ncols |= 0\r\n  x_ptr |= 0\r\n  y_ptr |= 0\r\n  var nn,m,i,i1,j,k,i2,l,l1,l2\r\n  var c1,c2,t,t1,t2,u1,u2,z,row,a,b,c,d,k1,k2,k3\r\n  \r\n  // Calculate the number of points\r\n  nn = ncols\r\n  m = bits.log2(nn)\r\n  \r\n  for(row=0; row<nrows; ++row) {  \r\n    // Do the bit reversal\r\n    i2 = nn >> 1;\r\n    j = 0;\r\n    for(i=0;i<nn-1;i++) {\r\n      if(i < j) {\r\n        t = buffer[x_ptr+i]\r\n        buffer[x_ptr+i] = buffer[x_ptr+j]\r\n        buffer[x_ptr+j] = t\r\n        t = buffer[y_ptr+i]\r\n        buffer[y_ptr+i] = buffer[y_ptr+j]\r\n        buffer[y_ptr+j] = t\r\n      }\r\n      k = i2\r\n      while(k <= j) {\r\n        j -= k\r\n        k >>= 1\r\n      }\r\n      j += k\r\n    }\r\n    \r\n    // Compute the FFT\r\n    c1 = -1.0\r\n    c2 = 0.0\r\n    l2 = 1\r\n    for(l=0;l<m;l++) {\r\n      l1 = l2\r\n      l2 <<= 1\r\n      u1 = 1.0\r\n      u2 = 0.0\r\n      for(j=0;j<l1;j++) {\r\n        for(i=j;i<nn;i+=l2) {\r\n          i1 = i + l1\r\n          a = buffer[x_ptr+i1]\r\n          b = buffer[y_ptr+i1]\r\n          c = buffer[x_ptr+i]\r\n          d = buffer[y_ptr+i]\r\n          k1 = u1 * (a + b)\r\n          k2 = a * (u2 - u1)\r\n          k3 = b * (u1 + u2)\r\n          t1 = k1 - k3\r\n          t2 = k1 + k2\r\n          buffer[x_ptr+i1] = c - t1\r\n          buffer[y_ptr+i1] = d - t2\r\n          buffer[x_ptr+i] += t1\r\n          buffer[y_ptr+i] += t2\r\n        }\r\n        k1 = c1 * (u1 + u2)\r\n        k2 = u1 * (c2 - c1)\r\n        k3 = u2 * (c1 + c2)\r\n        u1 = k1 - k3\r\n        u2 = k1 + k2\r\n      }\r\n      c2 = Math.sqrt((1.0 - c1) / 2.0)\r\n      if(dir < 0) {\r\n        c2 = -c2\r\n      }\r\n      c1 = Math.sqrt((1.0 + c1) / 2.0)\r\n    }\r\n    \r\n    // Scaling for inverse transform\r\n    if(dir < 0) {\r\n      var scale_f = 1.0 / nn\r\n      for(i=0;i<nn;i++) {\r\n        buffer[x_ptr+i] *= scale_f\r\n        buffer[y_ptr+i] *= scale_f\r\n      }\r\n    }\r\n    \r\n    // Advance pointers\r\n    x_ptr += ncols\r\n    y_ptr += ncols\r\n  }\r\n}\r\n\r\n// Use Bluestein algorithm for npot FFTs\r\n// Scratch memory required:  2 * ncols + 4 * bits.nextPow2(2*ncols + 1)\r\nfunction fftBluestein(dir, nrows, ncols, buffer, x_ptr, y_ptr, scratch_ptr) {\r\n  dir |= 0\r\n  nrows |= 0\r\n  ncols |= 0\r\n  x_ptr |= 0\r\n  y_ptr |= 0\r\n  scratch_ptr |= 0\r\n\r\n  // Initialize tables\r\n  var m = bits.nextPow2(2 * ncols + 1)\r\n    , cos_ptr = scratch_ptr\r\n    , sin_ptr = cos_ptr + ncols\r\n    , xs_ptr  = sin_ptr + ncols\r\n    , ys_ptr  = xs_ptr  + m\r\n    , cft_ptr = ys_ptr  + m\r\n    , sft_ptr = cft_ptr + m\r\n    , w = -dir * Math.PI / ncols\r\n    , row, a, b, c, d, k1, k2, k3\r\n    , i\r\n  for(i=0; i<ncols; ++i) {\r\n    a = w * ((i * i) % (ncols * 2))\r\n    c = Math.cos(a)\r\n    d = Math.sin(a)\r\n    buffer[cft_ptr+(m-i)] = buffer[cft_ptr+i] = buffer[cos_ptr+i] = c\r\n    buffer[sft_ptr+(m-i)] = buffer[sft_ptr+i] = buffer[sin_ptr+i] = d\r\n  }\r\n  for(i=ncols; i<=m-ncols; ++i) {\r\n    buffer[cft_ptr+i] = 0.0\r\n  }\r\n  for(i=ncols; i<=m-ncols; ++i) {\r\n    buffer[sft_ptr+i] = 0.0\r\n  }\r\n\r\n  fftRadix2(1, 1, m, buffer, cft_ptr, sft_ptr)\r\n  \r\n  //Compute scale factor\r\n  if(dir < 0) {\r\n    w = 1.0 / ncols\r\n  } else {\r\n    w = 1.0\r\n  }\r\n  \r\n  //Handle direction\r\n  for(row=0; row<nrows; ++row) {\r\n  \r\n    // Copy row into scratch memory, multiply weights\r\n    for(i=0; i<ncols; ++i) {\r\n      a = buffer[x_ptr+i]\r\n      b = buffer[y_ptr+i]\r\n      c = buffer[cos_ptr+i]\r\n      d = -buffer[sin_ptr+i]\r\n      k1 = c * (a + b)\r\n      k2 = a * (d - c)\r\n      k3 = b * (c + d)\r\n      buffer[xs_ptr+i] = k1 - k3\r\n      buffer[ys_ptr+i] = k1 + k2\r\n    }\r\n    //Zero out the rest\r\n    for(i=ncols; i<m; ++i) {\r\n      buffer[xs_ptr+i] = 0.0\r\n    }\r\n    for(i=ncols; i<m; ++i) {\r\n      buffer[ys_ptr+i] = 0.0\r\n    }\r\n    \r\n    // FFT buffer\r\n    fftRadix2(1, 1, m, buffer, xs_ptr, ys_ptr)\r\n    \r\n    // Apply multiplier\r\n    for(i=0; i<m; ++i) {\r\n      a = buffer[xs_ptr+i]\r\n      b = buffer[ys_ptr+i]\r\n      c = buffer[cft_ptr+i]\r\n      d = buffer[sft_ptr+i]\r\n      k1 = c * (a + b)\r\n      k2 = a * (d - c)\r\n      k3 = b * (c + d)\r\n      buffer[xs_ptr+i] = k1 - k3\r\n      buffer[ys_ptr+i] = k1 + k2\r\n    }\r\n    \r\n    // Inverse FFT buffer\r\n    fftRadix2(-1, 1, m, buffer, xs_ptr, ys_ptr)\r\n    \r\n    // Copy result back into x/y\r\n    for(i=0; i<ncols; ++i) {\r\n      a = buffer[xs_ptr+i]\r\n      b = buffer[ys_ptr+i]\r\n      c = buffer[cos_ptr+i]\r\n      d = -buffer[sin_ptr+i]\r\n      k1 = c * (a + b)\r\n      k2 = a * (d - c)\r\n      k3 = b * (c + d)\r\n      buffer[x_ptr+i] = w * (k1 - k3)\r\n      buffer[y_ptr+i] = w * (k1 + k2)\r\n    }\r\n    \r\n    x_ptr += ncols\r\n    y_ptr += ncols\r\n  }\r\n}\r\n","map":{"mappings":[{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/ndarray-fft/lib/fft-matrix.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}}],"sources":{"node_modules/ndarray-fft/lib/fft-matrix.js":"var bits = require('bit-twiddle')\r\n\r\nfunction fft(dir, nrows, ncols, buffer, x_ptr, y_ptr, scratch_ptr) {\r\n  dir |= 0\r\n  nrows |= 0\r\n  ncols |= 0\r\n  x_ptr |= 0\r\n  y_ptr |= 0\r\n  if(bits.isPow2(ncols)) {\r\n    fftRadix2(dir, nrows, ncols, buffer, x_ptr, y_ptr)\r\n  } else {\r\n    fftBluestein(dir, nrows, ncols, buffer, x_ptr, y_ptr, scratch_ptr)\r\n  }\r\n}\r\nmodule.exports = fft\r\n\r\nfunction scratchMemory(n) {\r\n  if(bits.isPow2(n)) {\r\n    return 0\r\n  }\r\n  return 2 * n + 4 * bits.nextPow2(2*n + 1)\r\n}\r\nmodule.exports.scratchMemory = scratchMemory\r\n\r\n\r\n//Radix 2 FFT Adapted from Paul Bourke's C Implementation\r\nfunction fftRadix2(dir, nrows, ncols, buffer, x_ptr, y_ptr) {\r\n  dir |= 0\r\n  nrows |= 0\r\n  ncols |= 0\r\n  x_ptr |= 0\r\n  y_ptr |= 0\r\n  var nn,m,i,i1,j,k,i2,l,l1,l2\r\n  var c1,c2,t,t1,t2,u1,u2,z,row,a,b,c,d,k1,k2,k3\r\n  \r\n  // Calculate the number of points\r\n  nn = ncols\r\n  m = bits.log2(nn)\r\n  \r\n  for(row=0; row<nrows; ++row) {  \r\n    // Do the bit reversal\r\n    i2 = nn >> 1;\r\n    j = 0;\r\n    for(i=0;i<nn-1;i++) {\r\n      if(i < j) {\r\n        t = buffer[x_ptr+i]\r\n        buffer[x_ptr+i] = buffer[x_ptr+j]\r\n        buffer[x_ptr+j] = t\r\n        t = buffer[y_ptr+i]\r\n        buffer[y_ptr+i] = buffer[y_ptr+j]\r\n        buffer[y_ptr+j] = t\r\n      }\r\n      k = i2\r\n      while(k <= j) {\r\n        j -= k\r\n        k >>= 1\r\n      }\r\n      j += k\r\n    }\r\n    \r\n    // Compute the FFT\r\n    c1 = -1.0\r\n    c2 = 0.0\r\n    l2 = 1\r\n    for(l=0;l<m;l++) {\r\n      l1 = l2\r\n      l2 <<= 1\r\n      u1 = 1.0\r\n      u2 = 0.0\r\n      for(j=0;j<l1;j++) {\r\n        for(i=j;i<nn;i+=l2) {\r\n          i1 = i + l1\r\n          a = buffer[x_ptr+i1]\r\n          b = buffer[y_ptr+i1]\r\n          c = buffer[x_ptr+i]\r\n          d = buffer[y_ptr+i]\r\n          k1 = u1 * (a + b)\r\n          k2 = a * (u2 - u1)\r\n          k3 = b * (u1 + u2)\r\n          t1 = k1 - k3\r\n          t2 = k1 + k2\r\n          buffer[x_ptr+i1] = c - t1\r\n          buffer[y_ptr+i1] = d - t2\r\n          buffer[x_ptr+i] += t1\r\n          buffer[y_ptr+i] += t2\r\n        }\r\n        k1 = c1 * (u1 + u2)\r\n        k2 = u1 * (c2 - c1)\r\n        k3 = u2 * (c1 + c2)\r\n        u1 = k1 - k3\r\n        u2 = k1 + k2\r\n      }\r\n      c2 = Math.sqrt((1.0 - c1) / 2.0)\r\n      if(dir < 0) {\r\n        c2 = -c2\r\n      }\r\n      c1 = Math.sqrt((1.0 + c1) / 2.0)\r\n    }\r\n    \r\n    // Scaling for inverse transform\r\n    if(dir < 0) {\r\n      var scale_f = 1.0 / nn\r\n      for(i=0;i<nn;i++) {\r\n        buffer[x_ptr+i] *= scale_f\r\n        buffer[y_ptr+i] *= scale_f\r\n      }\r\n    }\r\n    \r\n    // Advance pointers\r\n    x_ptr += ncols\r\n    y_ptr += ncols\r\n  }\r\n}\r\n\r\n// Use Bluestein algorithm for npot FFTs\r\n// Scratch memory required:  2 * ncols + 4 * bits.nextPow2(2*ncols + 1)\r\nfunction fftBluestein(dir, nrows, ncols, buffer, x_ptr, y_ptr, scratch_ptr) {\r\n  dir |= 0\r\n  nrows |= 0\r\n  ncols |= 0\r\n  x_ptr |= 0\r\n  y_ptr |= 0\r\n  scratch_ptr |= 0\r\n\r\n  // Initialize tables\r\n  var m = bits.nextPow2(2 * ncols + 1)\r\n    , cos_ptr = scratch_ptr\r\n    , sin_ptr = cos_ptr + ncols\r\n    , xs_ptr  = sin_ptr + ncols\r\n    , ys_ptr  = xs_ptr  + m\r\n    , cft_ptr = ys_ptr  + m\r\n    , sft_ptr = cft_ptr + m\r\n    , w = -dir * Math.PI / ncols\r\n    , row, a, b, c, d, k1, k2, k3\r\n    , i\r\n  for(i=0; i<ncols; ++i) {\r\n    a = w * ((i * i) % (ncols * 2))\r\n    c = Math.cos(a)\r\n    d = Math.sin(a)\r\n    buffer[cft_ptr+(m-i)] = buffer[cft_ptr+i] = buffer[cos_ptr+i] = c\r\n    buffer[sft_ptr+(m-i)] = buffer[sft_ptr+i] = buffer[sin_ptr+i] = d\r\n  }\r\n  for(i=ncols; i<=m-ncols; ++i) {\r\n    buffer[cft_ptr+i] = 0.0\r\n  }\r\n  for(i=ncols; i<=m-ncols; ++i) {\r\n    buffer[sft_ptr+i] = 0.0\r\n  }\r\n\r\n  fftRadix2(1, 1, m, buffer, cft_ptr, sft_ptr)\r\n  \r\n  //Compute scale factor\r\n  if(dir < 0) {\r\n    w = 1.0 / ncols\r\n  } else {\r\n    w = 1.0\r\n  }\r\n  \r\n  //Handle direction\r\n  for(row=0; row<nrows; ++row) {\r\n  \r\n    // Copy row into scratch memory, multiply weights\r\n    for(i=0; i<ncols; ++i) {\r\n      a = buffer[x_ptr+i]\r\n      b = buffer[y_ptr+i]\r\n      c = buffer[cos_ptr+i]\r\n      d = -buffer[sin_ptr+i]\r\n      k1 = c * (a + b)\r\n      k2 = a * (d - c)\r\n      k3 = b * (c + d)\r\n      buffer[xs_ptr+i] = k1 - k3\r\n      buffer[ys_ptr+i] = k1 + k2\r\n    }\r\n    //Zero out the rest\r\n    for(i=ncols; i<m; ++i) {\r\n      buffer[xs_ptr+i] = 0.0\r\n    }\r\n    for(i=ncols; i<m; ++i) {\r\n      buffer[ys_ptr+i] = 0.0\r\n    }\r\n    \r\n    // FFT buffer\r\n    fftRadix2(1, 1, m, buffer, xs_ptr, ys_ptr)\r\n    \r\n    // Apply multiplier\r\n    for(i=0; i<m; ++i) {\r\n      a = buffer[xs_ptr+i]\r\n      b = buffer[ys_ptr+i]\r\n      c = buffer[cft_ptr+i]\r\n      d = buffer[sft_ptr+i]\r\n      k1 = c * (a + b)\r\n      k2 = a * (d - c)\r\n      k3 = b * (c + d)\r\n      buffer[xs_ptr+i] = k1 - k3\r\n      buffer[ys_ptr+i] = k1 + k2\r\n    }\r\n    \r\n    // Inverse FFT buffer\r\n    fftRadix2(-1, 1, m, buffer, xs_ptr, ys_ptr)\r\n    \r\n    // Copy result back into x/y\r\n    for(i=0; i<ncols; ++i) {\r\n      a = buffer[xs_ptr+i]\r\n      b = buffer[ys_ptr+i]\r\n      c = buffer[cos_ptr+i]\r\n      d = -buffer[sin_ptr+i]\r\n      k1 = c * (a + b)\r\n      k2 = a * (d - c)\r\n      k3 = b * (c + d)\r\n      buffer[x_ptr+i] = w * (k1 - k3)\r\n      buffer[y_ptr+i] = w * (k1 + k2)\r\n    }\r\n    \r\n    x_ptr += ncols\r\n    y_ptr += ncols\r\n  }\r\n}\r\n"},"lineCount":218}},"hash":"e966710d956d8ec1b00383b06f249d5f","cacheData":{"env":{}}}
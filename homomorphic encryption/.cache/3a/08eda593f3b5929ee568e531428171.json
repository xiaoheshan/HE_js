{"id":"node_modules/numjs/src/images/sobel.js","dependencies":[{"name":"/Users/huyifan/HE_js/mnist/package.json","includedInParent":true,"mtime":1547003400823},{"name":"/Users/huyifan/HE_js/mnist/.babelrc","includedInParent":true,"mtime":1546601936000},{"name":"/Users/huyifan/HE_js/mnist/node_modules/numjs/package.json","includedInParent":true,"mtime":1546999610650},{"name":"cwise","loc":{"line":3,"column":20},"parent":"/Users/huyifan/HE_js/mnist/node_modules/numjs/src/images/sobel.js","resolved":"/Users/huyifan/HE_js/mnist/node_modules/cwise/lib/cwise-esprima.js"},{"name":"ndarray-ops","loc":{"line":4,"column":18},"parent":"/Users/huyifan/HE_js/mnist/node_modules/numjs/src/images/sobel.js","resolved":"/Users/huyifan/HE_js/mnist/node_modules/ndarray-ops/ndarray-ops.js"},{"name":"../ndarray","loc":{"line":5,"column":22},"parent":"/Users/huyifan/HE_js/mnist/node_modules/numjs/src/images/sobel.js","resolved":"/Users/huyifan/HE_js/mnist/node_modules/numjs/src/ndarray.js"},{"name":"../utils","loc":{"line":6,"column":17},"parent":"/Users/huyifan/HE_js/mnist/node_modules/numjs/src/images/sobel.js","resolved":"/Users/huyifan/HE_js/mnist/node_modules/numjs/src/utils.js"},{"name":"./rgb2gray","loc":{"line":7,"column":23},"parent":"/Users/huyifan/HE_js/mnist/node_modules/numjs/src/images/sobel.js","resolved":"/Users/huyifan/HE_js/mnist/node_modules/numjs/src/images/rgb2gray.js"}],"generated":{"js":"'use strict';\n\nvar cwise = require('cwise');\nvar ops = require('ndarray-ops');\nvar NdArray = require('../ndarray');\nvar __ = require('../utils');\nvar rgb2gray = require('./rgb2gray');\n\nvar doSobel = cwise({\n  args: [\n    'array', //  sobel\n    'array', // img\n    {offset: [-1, -1], array: 1}, // a\n    {offset: [-1, 0], array: 1}, // b\n    {offset: [-1, 1], array: 1}, // c\n    {offset: [0, -1], array: 1}, // d\n    // {offset:[ 9,  0], array:1}, // useless since available already and always multiplied by zero\n    {offset: [0, 1], array: 1}, // f\n    {offset: [1, -1], array: 1}, // g\n    {offset: [1, 0], array: 1}, // h\n    {offset: [1, 1], array: 1} // i\n  ],\n  body: function doSobelBody (s, img, a, b, c, d, f, g, h, i) {\n    var sV = (a + 2 * b + c - g - 2 * h - i);\n    var sH = (a - c + 2 * d - 2 * f + g - i);\n    s = Math.sqrt(sH * sH + sV * sV);\n  }\n});\n\n/**\n * Find the edge magnitude using the Sobel transform.\n *\n * @note\n * Take the square root of the sum of the squares of the horizontal and vertical Sobels to get a magnitude thatâ€™s somewhat insensitive to direction.\n *\n * The 3x3 convolution kernel used in the horizontal and vertical Sobels is an approximation of the\n * gradient of the image (with some slight blurring since 9 pixels are used to compute the gradient at a given pixel).\n * As an approximation of the gradient, the Sobel operator is not completely rotation-invariant. The Scharr operator should be used for a better rotation invariance.\n * @param {NdArray} img\n */\nmodule.exports = function computeSobel (img) {\n  var gray = rgb2gray(img);\n  var iShape = gray.shape;\n  var iH = iShape[0];\n  var iW = iShape[1];\n\n  var out = new NdArray(new Float32Array(__.shapeSize(iShape)), iShape);\n\n  doSobel(out.selection, gray.selection);\n\n  // set borders to zero (invalid anyway)\n  ops.assigns(out.selection.pick(0, null), 0); // first line\n  ops.assigns(out.selection.pick(null, 0), 0); // first col\n  ops.assigns(out.selection.pick(iH - 1, null), 0); // last line\n  ops.assigns(out.selection.pick(null, iW - 1), 0); // last col\n\n  return out.divide(4 * Math.sqrt(2), false);\n};\n","map":{"mappings":[{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/numjs/src/images/sobel.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}}],"sources":{"node_modules/numjs/src/images/sobel.js":"'use strict';\n\nvar cwise = require('cwise');\nvar ops = require('ndarray-ops');\nvar NdArray = require('../ndarray');\nvar __ = require('../utils');\nvar rgb2gray = require('./rgb2gray');\n\nvar doSobel = cwise({\n  args: [\n    'array', //  sobel\n    'array', // img\n    {offset: [-1, -1], array: 1}, // a\n    {offset: [-1, 0], array: 1}, // b\n    {offset: [-1, 1], array: 1}, // c\n    {offset: [0, -1], array: 1}, // d\n    // {offset:[ 9,  0], array:1}, // useless since available already and always multiplied by zero\n    {offset: [0, 1], array: 1}, // f\n    {offset: [1, -1], array: 1}, // g\n    {offset: [1, 0], array: 1}, // h\n    {offset: [1, 1], array: 1} // i\n  ],\n  body: function doSobelBody (s, img, a, b, c, d, f, g, h, i) {\n    var sV = (a + 2 * b + c - g - 2 * h - i);\n    var sH = (a - c + 2 * d - 2 * f + g - i);\n    s = Math.sqrt(sH * sH + sV * sV);\n  }\n});\n\n/**\n * Find the edge magnitude using the Sobel transform.\n *\n * @note\n * Take the square root of the sum of the squares of the horizontal and vertical Sobels to get a magnitude thatâ€™s somewhat insensitive to direction.\n *\n * The 3x3 convolution kernel used in the horizontal and vertical Sobels is an approximation of the\n * gradient of the image (with some slight blurring since 9 pixels are used to compute the gradient at a given pixel).\n * As an approximation of the gradient, the Sobel operator is not completely rotation-invariant. The Scharr operator should be used for a better rotation invariance.\n * @param {NdArray} img\n */\nmodule.exports = function computeSobel (img) {\n  var gray = rgb2gray(img);\n  var iShape = gray.shape;\n  var iH = iShape[0];\n  var iW = iShape[1];\n\n  var out = new NdArray(new Float32Array(__.shapeSize(iShape)), iShape);\n\n  doSobel(out.selection, gray.selection);\n\n  // set borders to zero (invalid anyway)\n  ops.assigns(out.selection.pick(0, null), 0); // first line\n  ops.assigns(out.selection.pick(null, 0), 0); // first col\n  ops.assigns(out.selection.pick(iH - 1, null), 0); // last line\n  ops.assigns(out.selection.pick(null, iW - 1), 0); // last col\n\n  return out.divide(4 * Math.sqrt(2), false);\n};\n"},"lineCount":59}},"hash":"ee75b3ca5bdfabde1a9f3870237fd48d","cacheData":{"env":{}}}
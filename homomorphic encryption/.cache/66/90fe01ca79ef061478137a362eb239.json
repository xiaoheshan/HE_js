{"id":"node_modules/ndarray-gemm/gemm.js","dependencies":[{"name":"/Users/huyifan/HE_js/mnist/package.json","includedInParent":true,"mtime":1547003400823},{"name":"/Users/huyifan/HE_js/mnist/.babelrc","includedInParent":true,"mtime":1546601936000},{"name":"/Users/huyifan/HE_js/mnist/node_modules/ndarray-gemm/package.json","includedInParent":true,"mtime":1546999610944},{"name":"./lib/planner.js","loc":{"line":5,"column":27},"parent":"/Users/huyifan/HE_js/mnist/node_modules/ndarray-gemm/gemm.js","resolved":"/Users/huyifan/HE_js/mnist/node_modules/ndarray-gemm/lib/planner.js"}],"generated":{"js":"\"use strict\"\n\nmodule.exports = matrixProduct\n\nvar generatePlan = require(\"./lib/planner.js\")\n\nfunction shape(arr) {\n  if(Array.isArray(arr)) {\n    return [ arr.length, arr[0].length ]\n  } else {\n    return arr.shape\n  }\n}\n\nfunction checkShapes(out, a, b) {\n  var os = shape(out)\n  var as = shape(a)\n  var bs = shape(b)\n  if(os[0] !== as[0] || os[1] !== bs[1] || as[1] !== bs[0]) {\n    throw new Error(\"Mismatched array shapes for matrix product\")\n  }\n}\n\nfunction classifyType(m) {\n  if(Array.isArray(m)) {\n    if(Array.isArray(m)) {\n      return [ \"r\", \"native\" ]\n    }\n  } else if(m.shape && (m.shape.length === 2)) {\n    if(m.order[0]) {\n      return [ \"r\", m.dtype ]\n    } else {\n      return [ \"c\", m.dtype ]\n    }\n  }\n  throw new Error(\"Unrecognized data type\")\n}\n\nvar CACHE = {}\n\nfunction matrixProduct(out, a, b, alpha, beta) {\n  if(alpha === undefined) {\n    alpha = 1.0\n  }\n  if(beta === undefined) {\n    beta = 0.0\n  }\n  var useAlpha = (alpha !== 1.0)\n  var useBeta  = (beta !== 0.0)\n  var outType  = classifyType(out)\n  var aType    = classifyType(a)\n  var bType    = classifyType(b)\n\n  checkShapes(out, a, b)\n\n  var typeSig  = [ outType, aType, bType, useAlpha, useBeta ].join(\":\")\n  var proc     = CACHE[typeSig]\n  if(!proc) {\n    proc = CACHE[typeSig] = generatePlan(outType, aType, bType, useAlpha, useBeta)\n  }\n  return proc(out, a, b, alpha, beta)\n}","map":{"mappings":[{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/ndarray-gemm/gemm.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}}],"sources":{"node_modules/ndarray-gemm/gemm.js":"\"use strict\"\n\nmodule.exports = matrixProduct\n\nvar generatePlan = require(\"./lib/planner.js\")\n\nfunction shape(arr) {\n  if(Array.isArray(arr)) {\n    return [ arr.length, arr[0].length ]\n  } else {\n    return arr.shape\n  }\n}\n\nfunction checkShapes(out, a, b) {\n  var os = shape(out)\n  var as = shape(a)\n  var bs = shape(b)\n  if(os[0] !== as[0] || os[1] !== bs[1] || as[1] !== bs[0]) {\n    throw new Error(\"Mismatched array shapes for matrix product\")\n  }\n}\n\nfunction classifyType(m) {\n  if(Array.isArray(m)) {\n    if(Array.isArray(m)) {\n      return [ \"r\", \"native\" ]\n    }\n  } else if(m.shape && (m.shape.length === 2)) {\n    if(m.order[0]) {\n      return [ \"r\", m.dtype ]\n    } else {\n      return [ \"c\", m.dtype ]\n    }\n  }\n  throw new Error(\"Unrecognized data type\")\n}\n\nvar CACHE = {}\n\nfunction matrixProduct(out, a, b, alpha, beta) {\n  if(alpha === undefined) {\n    alpha = 1.0\n  }\n  if(beta === undefined) {\n    beta = 0.0\n  }\n  var useAlpha = (alpha !== 1.0)\n  var useBeta  = (beta !== 0.0)\n  var outType  = classifyType(out)\n  var aType    = classifyType(a)\n  var bType    = classifyType(b)\n\n  checkShapes(out, a, b)\n\n  var typeSig  = [ outType, aType, bType, useAlpha, useBeta ].join(\":\")\n  var proc     = CACHE[typeSig]\n  if(!proc) {\n    proc = CACHE[typeSig] = generatePlan(outType, aType, bType, useAlpha, useBeta)\n  }\n  return proc(out, a, b, alpha, beta)\n}"},"lineCount":62}},"hash":"7a4c282895ff2932a7a3d2d63213e25b","cacheData":{"env":{}}}